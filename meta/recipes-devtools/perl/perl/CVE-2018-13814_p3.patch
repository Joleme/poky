From f3812e218c6471fce2cf19e65ac2f5a273995fbc Mon Sep 17 00:00:00 2001
From: Yves Orton <demerphq@gmail.com>
Date: Sun, 25 Jun 2017 22:31:10 +0200
Subject: [PATCH 3/4] regcomp.c: handle_regex_sets() - add DEBUG_PARSE and
 fixup 'depth' logic

'depth' is used to track the recursion depth during compilation,
and is used by things like DEBUG_PARSE() to show the compilation
process.

handle_regex_sets() was using its own 'depth' for two different purposes,
which is quite confusing.

At the same time, when we call handle_regex_sets() from reg() it is
important to increment 'depth'.

Upstream-Status: Backport
Signed-off-by: Sam Kappen <skappen@mvista.com>
---
 regcomp.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/regcomp.c b/regcomp.c
index d324cb5..ff1c676 100644
--- a/regcomp.c
+++ b/regcomp.c
@@ -11027,7 +11027,7 @@ S_reg(pTHX_ RExC_state_t *pRExC_state, I32 paren, I32 *flagp,U32 depth)
                 vFAIL("Unknown switch condition (?(...))");
 	    }
 	    case '[':           /* (?[ ... ]) */
-                return handle_regex_sets(pRExC_state, NULL, flagp, depth,
+                return handle_regex_sets(pRExC_state, NULL, flagp, depth+1,
                                          oregcomp_parse);
             case 0: /* A NUL */
 		RExC_parse--; /* for vFAIL to print correctly */
@@ -14582,6 +14582,8 @@ S_handle_regex_sets(pTHX_ RExC_state_t *pRExC_state, SV** return_invlist,
 
     PERL_ARGS_ASSERT_HANDLE_REGEX_SETS;
 
+    DEBUG_PARSE("xcls");
+
     if (in_locale) {
         set_regex_charset(&RExC_flags, REGEX_UNICODE_CHARSET);
     }
@@ -14599,7 +14601,7 @@ S_handle_regex_sets(pTHX_ RExC_state_t *pRExC_state, SV** return_invlist,
      * these things, we need to realize that something preceded by a backslash
      * is escaped, so we have to keep track of backslashes */
     if (SIZE_ONLY) {
-        UV depth = 0; /* how many nested (?[...]) constructs */
+        UV nest_depth = 0; /* how many nested (?[...]) constructs */
 
         while (RExC_parse < RExC_end) {
             SV* current = NULL;
@@ -14609,7 +14611,7 @@ S_handle_regex_sets(pTHX_ RExC_state_t *pRExC_state, SV** return_invlist,
 
             switch (*RExC_parse) {
                 case '?':
-                    if (RExC_parse[1] == '[') depth++, RExC_parse++;
+                    if (RExC_parse[1] == '[') nest_depth++, RExC_parse++;
                     /* FALLTHROUGH */
                 default:
                     break;
@@ -14666,7 +14668,7 @@ S_handle_regex_sets(pTHX_ RExC_state_t *pRExC_state, SV** return_invlist,
                 }
 
                 case ']':
-                    if (depth--) break;
+                    if (nest_depth--) break;
                     RExC_parse++;
                     if (*RExC_parse == ')') {
                         node = reganode(pRExC_state, ANYOF, 0);
-- 
2.7.4

