From 6fc525350c76e2ce8c46a90d2158daff9178ced8 Mon Sep 17 00:00:00 2001
From: Evgeny Kotkov <kotkov@apache.org>
Date: Wed, 22 Nov 2017 15:14:25 +0000
Subject: [PATCH 3/4] Following up on r1815799, rework the
 commit_locked_empty_relpath_test().

Within it, don't test an undocumented/invalid usage of the delta editor
API with using open_root() for a file URL as, apparently, that works by
a coincidence.

* subversion/tests/libsvn_ra/ra-test.c
  (commit_locked_empty_relpath_test): Rename to...
  (commit_locked_file): ...this.  Properly open the parent folder as
   the root of the edit and avoid using empty relpaths.
  (test_funcs): Track the test rename.

git-svn-id: https://svn.apache.org/repos/asf/subversion/trunk@1816060 13f79535-47bb-0310-9956-ffa450edef68

Upstream status: backport(https://github.com/apache/subversion/commit/e4610c1d5a02d348c764f7dce0e0e289fd8c778a)
CVE: CVE-2018-11782 patch #3

Signed-off-by: Anand Je Sypureddy <anandje@mvista.com>
---
 subversion/tests/libsvn_ra/ra-test.c | 26 +++++++++++---------------
 1 file changed, 11 insertions(+), 15 deletions(-)

diff --git a/subversion/tests/libsvn_ra/ra-test.c b/subversion/tests/libsvn_ra/ra-test.c
index 7b7c7fd..329fdb9 100644
--- a/subversion/tests/libsvn_ra/ra-test.c
+++ b/subversion/tests/libsvn_ra/ra-test.c
@@ -886,8 +886,7 @@ commit_empty_last_change(const svn_test_opts_t *opts,
 }
 
 static svn_error_t *
-commit_locked_empty_relpath_test(const svn_test_opts_t *opts,
-                                 apr_pool_t *pool)
+commit_locked_file(const svn_test_opts_t *opts, apr_pool_t *pool)
 {
   const char *url;
   svn_ra_callbacks2_t *cbtable;
@@ -896,7 +895,6 @@ commit_locked_empty_relpath_test(const svn_test_opts_t *opts,
   void *edit_baton;
   void *root_baton;
   void *file_baton;
-  const char *file_url;
   struct lock_result_t *lock_result;
   apr_hash_t *lock_tokens;
   svn_txdelta_window_handler_t handler;
@@ -906,7 +904,7 @@ commit_locked_empty_relpath_test(const svn_test_opts_t *opts,
   const svn_string_t *propval;
 
   SVN_ERR(svn_test__create_repos2(NULL, &url, NULL,
-                                  "test-repo-commit-locked-empty-relpath-test",
+                                  "test-repo-commit-locked-file-test",
                                   opts, pool, pool));
 
   SVN_ERR(svn_ra_initialize(pool));
@@ -945,22 +943,20 @@ commit_locked_empty_relpath_test(const svn_test_opts_t *opts,
     lock_result = svn_hash_gets(baton.results, "file");
   }
 
-  /* Open a new session using the file's URL (since now, we would be
-   * using "" as the file's relpath). */
-  file_url = svn_path_url_add_component2(url, "file", pool);
-  SVN_ERR(svn_ra_open4(&session, NULL, file_url, NULL, cbtable,
+  /* Open a new session using the file parent's URL. */
+  SVN_ERR(svn_ra_open4(&session, NULL, url, NULL, cbtable,
                        NULL, NULL, pool));
 
   /* Create a new commit editor supplying our lock token. */
   lock_tokens = apr_hash_make(pool);
-  svn_hash_sets(lock_tokens, "", lock_result->lock->token);
+  svn_hash_sets(lock_tokens, "file", lock_result->lock->token);
   SVN_ERR(svn_ra_get_commit_editor3(session, &editor, &edit_baton,
                                     apr_hash_make(pool), NULL, NULL,
                                     lock_tokens, TRUE, pool));
   /* Edit the locked file. */
   SVN_ERR(editor->open_root(edit_baton, SVN_INVALID_REVNUM,
                             pool, &root_baton));
-  SVN_ERR(editor->open_file("", root_baton, SVN_INVALID_REVNUM, pool,
+  SVN_ERR(editor->open_file("file", root_baton, SVN_INVALID_REVNUM, pool,
                             &file_baton));
   SVN_ERR(editor->apply_textdelta(file_baton, NULL, pool, &handler,
                                   &handler_baton));
@@ -971,14 +967,14 @@ commit_locked_empty_relpath_test(const svn_test_opts_t *opts,
   SVN_ERR(editor->close_edit(edit_baton, pool));
 
   /* Check the result. */
-  SVN_ERR(svn_ra_get_file(session, "", SVN_INVALID_REVNUM, NULL,
+  SVN_ERR(svn_ra_get_file(session, "file", SVN_INVALID_REVNUM, NULL,
                           &fetched_rev, NULL, pool));
   SVN_TEST_INT_ASSERT((int) fetched_rev, 2);
 
   /* Change property of the locked file. */
   SVN_ERR(editor->open_root(edit_baton, SVN_INVALID_REVNUM,
                             pool, &root_baton));
-  SVN_ERR(editor->open_file("", root_baton, SVN_INVALID_REVNUM, pool,
+  SVN_ERR(editor->open_file("file", root_baton, SVN_INVALID_REVNUM, pool,
                             &file_baton));
   SVN_ERR(editor->change_file_prop(file_baton, "propname",
                                    svn_string_create("propval", pool),
@@ -988,7 +984,7 @@ commit_locked_empty_relpath_test(const svn_test_opts_t *opts,
   SVN_ERR(editor->close_edit(edit_baton, pool));
 
   /* Check the result. */
-  SVN_ERR(svn_ra_get_file(session, "", SVN_INVALID_REVNUM, NULL,
+  SVN_ERR(svn_ra_get_file(session, "file", SVN_INVALID_REVNUM, NULL,
                           &fetched_rev, &fetched_props, pool));
   SVN_TEST_INT_ASSERT((int) fetched_rev, 3);
   propval = svn_hash_gets(fetched_props, "propname");
@@ -1026,8 +1022,8 @@ static struct svn_test_descriptor_t test_funcs[] =
                        "verify checkout over a tunnel"),
     SVN_TEST_OPTS_PASS(commit_empty_last_change,
                        "check how last change applies to empty commit"),
-    SVN_TEST_OPTS_PASS(commit_locked_empty_relpath_test,
-                       "check commit editor with relpath='' and lock"),
+    SVN_TEST_OPTS_PASS(commit_locked_file,
+                       "check commit editor for a locked file"),
     SVN_TEST_NULL
   };
 
-- 
2.7.4

